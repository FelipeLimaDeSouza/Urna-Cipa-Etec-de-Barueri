/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import bean.AlunoBean;
import controller.AlunoController;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.prompt.PromptSupport;

/**
 *
 * @author user
 */
public class frmEleitoresInterno extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmEleitoresInterno
     */
    private static frmDiaEleitorSucesso frmFilhoSucesso;
    private static frmDiaEleitorErro frmFilhoErro;
    private static frmDiaErroEleitorCadastrar frmFilhoErroCadastrar;
    private static frmDiaEleitorJaCadastrado frmFilhoEleitorJaCad;
    public frmEleitoresInterno() {
        initComponents();
        
        PromptSupport.setPrompt("Sem pontos ou traços", txtCpf);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT,txtCpf);
        PromptSupport.setPrompt("Buscar por CPF ou RA", txtPesquisar);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT,txtPesquisar);
        
        txtCpf.setBorder(null);
        txtPesquisar.setBorder(null);
        
    }
    
    public void limparCampos(){
    
        txtNome.setText("");
        txtCpf.setText("");
        txtRA.setText("");
        cmbCurso.setSelectedIndex(0);
        cmbModulo.setSelectedIndex(0);
        txtNome.requestFocus();
    
    }
    
    public void carregarAlunos(){
    
        try {
            
            txtPesquisar.setText("");
            
            AlunoController ac = new AlunoController();
            
            ArrayList<AlunoBean> list = ac.controllerSelecionaAluno();
            
            DefaultTableModel dtm = (DefaultTableModel) tblEleitores.getModel();
            
            dtm.setNumRows(0);
            
            for (int i = 0; i < list.size(); i++) {
                
                String turma = null;
                if(list.get(i).getAluno_turma()==1){
                
                    turma = "1º Módulo";
                
                }else if(list.get(i).getAluno_turma()==2){
                
                    turma = "2º Módulo";
                
                }else if(list.get(i).getAluno_turma()==3){
                
                    turma = "3º Módulo";
                
                }
                
                dtm.addRow(new Object[]{list.get(i).getAluno_id(), 
                    list.get(i).getAluno_nome(),
                    list.get(i).getAluno_cpf(),
                    list.get(i).getAluno_ra(),
                    list.get(i).getAluno_curso(),
                    turma});
                
            }
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    
    }

    public void selecionarAlunoExc(){
    
        String cpf = txtPesquisar.getText();
        String ra = txtPesquisar.getText();
        
        try {
            
            AlunoController ac = new AlunoController();
            
            ArrayList<AlunoBean> list = new ArrayList<AlunoBean>();
            
            DefaultTableModel dtm = (DefaultTableModel) tblEleitores.getModel();
            
            list = ac.controllerSelecionaAlunoExc(cpf, ra);
            
            dtm.setNumRows(0);
            
            for (int i = 0; i < list.size(); i++) {
                String turma = null;
                if(list.get(i).getAluno_turma()==1){
                
                    turma = "1º Módulo";
                
                }else if(list.get(i).getAluno_turma()==2){
                
                    turma = "2º Módulo";
                
                }else if(list.get(i).getAluno_turma()==3){
                
                    turma = "3º Módulo";
                
                }
                
                dtm.addRow(new Object[]{list.get(i).getAluno_id(), 
                    list.get(i).getAluno_nome(),
                    list.get(i).getAluno_cpf(),
                    list.get(i).getAluno_ra(),
                    list.get(i).getAluno_curso(),
                    turma});
                
            }
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    
    }
    
    private boolean campoNumerico(String campo){		
	return campo.matches("[0-9]{"+campo.length()+"}");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNome = new javax.swing.JTextField();
        txtCpf = new javax.swing.JTextField();
        txtRA = new javax.swing.JTextField();
        txtPesquisar = new javax.swing.JTextField();
        cmbCurso = new javax.swing.JComboBox<>();
        cmbModulo = new javax.swing.JComboBox<>();
        lblCadastrar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEleitores = new javax.swing.JTable();
        lblFundo = new javax.swing.JLabel();

        setBorder(null);
        getContentPane().setLayout(null);

        txtNome.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtNome.setBorder(null);
        getContentPane().add(txtNome);
        txtNome.setBounds(180, 70, 424, 30);

        txtCpf.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtCpf.setBorder(null);
        txtCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCpfKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCpfKeyReleased(evt);
            }
        });
        getContentPane().add(txtCpf);
        txtCpf.setBounds(180, 116, 174, 30);

        txtRA.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtRA.setBorder(null);
        getContentPane().add(txtRA);
        txtRA.setBounds(428, 162, 174, 30);

        txtPesquisar.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtPesquisar.setBorder(null);
        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });
        getContentPane().add(txtPesquisar);
        txtPesquisar.setBounds(60, 244, 220, 30);

        cmbCurso.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cmbCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o Curso", "Informática", "Recursos Humanos", "Segurança do Trabalho" }));
        getContentPane().add(cmbCurso);
        cmbCurso.setBounds(426, 116, 180, 34);

        cmbModulo.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cmbModulo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o Módulo", "1º Módulo", "2º Módulo", "3º Módulo" }));
        getContentPane().add(cmbModulo);
        cmbModulo.setBounds(178, 160, 180, 34);

        lblCadastrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblCadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCadastrarMouseClicked(evt);
            }
        });
        getContentPane().add(lblCadastrar);
        lblCadastrar.setBounds(470, 212, 98, 34);

        tblEleitores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "CPF", "RA", "Curso", "Módulo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEleitores.setGridColor(new java.awt.Color(255, 255, 255));
        tblEleitores.setOpaque(false);
        jScrollPane1.setViewportView(tblEleitores);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(60, 282, 564, 160);

        lblFundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pu_adm_eleitores.png"))); // NOI18N
        getContentPane().add(lblFundo);
        lblFundo.setBounds(-6, -6, 700, 460);

        setBounds(3, -24, 693, 479);
    }// </editor-fold>//GEN-END:initComponents

    private void txtCpfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCpfKeyPressed
        
        String cpf = txtCpf.getText();
        
        if((evt.getKeyCode()==KeyEvent.VK_LEFT)||(evt.getKeyCode()==KeyEvent.VK_RIGHT)
                ||(evt.getKeyCode()==KeyEvent.VK_DOWN)||(evt.getKeyCode()==KeyEvent.VK_UP) || 
                (evt.getKeyCode()==KeyEvent.VK_BACK_SPACE)){
            
        }else{
            
            int qtd = cpf.length();

            if(qtd > 10){

                cpf = cpf.substring(0, cpf.length()-1);

                txtCpf.setText(cpf);

            }
        }
    }//GEN-LAST:event_txtCpfKeyPressed

    private void txtCpfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCpfKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfKeyReleased

    private void lblCadastrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCadastrarMouseClicked
       String nome = txtNome.getText();
       String cpf = txtCpf.getText();
       String ra = txtRA.getText();
       int indexcur = cmbCurso.getSelectedIndex();
       int indexmod = cmbModulo.getSelectedIndex();
       boolean validaCpf = campoNumerico(cpf);
       boolean validaRa = campoNumerico(ra);
       
       if((nome.equals(""))||(cpf.equals(""))||(cpf.length() < 11)||(ra.equals(""))
               ||(indexcur == 0)||(indexmod == 0) || (validaCpf == false) || (validaRa == false)){
       
           frmFilhoErro = new frmDiaEleitorErro(this, true);
           frmFilhoErro.setVisible(true);
       
       }else{
       
           try {
               
               AlunoController ac = new AlunoController();
               AlunoBean ab = new AlunoBean();
               int valida = ac.controllerValidaAluno(cpf, ra);
               
               if(valida == 0){
                   
                   ab.setAluno_nome(nome);
                   ab.setAluno_cpf(cpf);
                   ab.setAluno_ra(ra);
                   ab.setAluno_curso((String) cmbCurso.getSelectedItem());
                   ab.setAluno_turma(cmbModulo.getSelectedIndex());
                   
                   int retorna = ac.controllerInsereAluno(ab);
                   
                   if(retorna == 1){
                       
                        frmFilhoSucesso = new frmDiaEleitorSucesso(this, true);
                        frmFilhoSucesso.setVisible(true);
                        
                        limparCampos();
                        carregarAlunos();

                   }else{
                   
                       frmFilhoErroCadastrar = new frmDiaErroEleitorCadastrar(null, true);
                       frmFilhoErroCadastrar.setVisible(true);
                        limparCampos();
                   
                   }
               
               }else{
               
                   frmFilhoEleitorJaCad = new frmDiaEleitorJaCadastrado(null, true);
                   frmFilhoEleitorJaCad.setVisible(true);
                   limparCampos();
               
               }
               
           } catch (Exception e) {
               System.out.println(e.getMessage());
           }
       
       }
       
    }//GEN-LAST:event_lblCadastrarMouseClicked

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_SPACE){
            evt.consume();
        }else if(txtPesquisar.getText().equals(" ")){
            evt.consume();
        }else if(txtPesquisar.getText().equals("")){
            carregarAlunos();
        }else if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }else{
            selecionarAlunoExc();
        }
    }//GEN-LAST:event_txtPesquisarKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbCurso;
    private javax.swing.JComboBox<String> cmbModulo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCadastrar;
    private javax.swing.JLabel lblFundo;
    private javax.swing.JTable tblEleitores;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPesquisar;
    private javax.swing.JTextField txtRA;
    // End of variables declaration//GEN-END:variables
}
